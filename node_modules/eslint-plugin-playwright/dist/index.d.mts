import * as eslint from 'eslint';

declare const _default: {
    configs: {
        'flat/jest-playwright': {
            languageOptions: {
                globals: any;
            };
            plugins: {
                playwright: {
                    configs: {};
                    rules: {
                        'expect-expect': eslint.Rule.RuleModule;
                        'max-nested-describe': eslint.Rule.RuleModule;
                        'missing-playwright-await': eslint.Rule.RuleModule;
                        'no-conditional-in-test': eslint.Rule.RuleModule;
                        'no-element-handle': eslint.Rule.RuleModule;
                        'no-eval': eslint.Rule.RuleModule;
                        'no-focused-test': eslint.Rule.RuleModule;
                        'no-force-option': eslint.Rule.RuleModule;
                        'no-nested-step': eslint.Rule.RuleModule;
                        'no-networkidle': eslint.Rule.RuleModule;
                        'no-nth-methods': eslint.Rule.RuleModule;
                        'no-page-pause': eslint.Rule.RuleModule;
                        'no-raw-locators': eslint.Rule.RuleModule;
                        'no-restricted-matchers': eslint.Rule.RuleModule;
                        'no-skipped-test': eslint.Rule.RuleModule;
                        'no-useless-await': eslint.Rule.RuleModule;
                        'no-useless-not': eslint.Rule.RuleModule;
                        'no-wait-for-selector': eslint.Rule.RuleModule;
                        'no-wait-for-timeout': eslint.Rule.RuleModule;
                        'prefer-lowercase-title': eslint.Rule.RuleModule;
                        'prefer-strict-equal': eslint.Rule.RuleModule;
                        'prefer-to-be': eslint.Rule.RuleModule;
                        'prefer-to-contain': eslint.Rule.RuleModule;
                        'prefer-to-have-count': eslint.Rule.RuleModule;
                        'prefer-to-have-length': eslint.Rule.RuleModule;
                        'prefer-web-first-assertions': eslint.Rule.RuleModule;
                        'require-soft-assertions': eslint.Rule.RuleModule;
                        'require-top-level-describe': eslint.Rule.RuleModule;
                        'valid-expect': eslint.Rule.RuleModule;
                        'valid-title': eslint.Rule.RuleModule;
                    };
                };
            };
            rules: {
                'jest/no-standalone-expect': (string | {
                    additionalTestBlockFunctions: string[];
                })[];
                'playwright/missing-playwright-await': string;
                'playwright/no-page-pause': string;
            };
        };
        'flat/recommended': {
            languageOptions: {
                globals: any;
            };
            plugins: {
                playwright: {
                    configs: {};
                    rules: {
                        'expect-expect': eslint.Rule.RuleModule;
                        'max-nested-describe': eslint.Rule.RuleModule;
                        'missing-playwright-await': eslint.Rule.RuleModule;
                        'no-conditional-in-test': eslint.Rule.RuleModule;
                        'no-element-handle': eslint.Rule.RuleModule;
                        'no-eval': eslint.Rule.RuleModule;
                        'no-focused-test': eslint.Rule.RuleModule;
                        'no-force-option': eslint.Rule.RuleModule;
                        'no-nested-step': eslint.Rule.RuleModule;
                        'no-networkidle': eslint.Rule.RuleModule;
                        'no-nth-methods': eslint.Rule.RuleModule;
                        'no-page-pause': eslint.Rule.RuleModule;
                        'no-raw-locators': eslint.Rule.RuleModule;
                        'no-restricted-matchers': eslint.Rule.RuleModule;
                        'no-skipped-test': eslint.Rule.RuleModule;
                        'no-useless-await': eslint.Rule.RuleModule;
                        'no-useless-not': eslint.Rule.RuleModule;
                        'no-wait-for-selector': eslint.Rule.RuleModule;
                        'no-wait-for-timeout': eslint.Rule.RuleModule;
                        'prefer-lowercase-title': eslint.Rule.RuleModule;
                        'prefer-strict-equal': eslint.Rule.RuleModule;
                        'prefer-to-be': eslint.Rule.RuleModule;
                        'prefer-to-contain': eslint.Rule.RuleModule;
                        'prefer-to-have-count': eslint.Rule.RuleModule;
                        'prefer-to-have-length': eslint.Rule.RuleModule;
                        'prefer-web-first-assertions': eslint.Rule.RuleModule;
                        'require-soft-assertions': eslint.Rule.RuleModule;
                        'require-top-level-describe': eslint.Rule.RuleModule;
                        'valid-expect': eslint.Rule.RuleModule;
                        'valid-title': eslint.Rule.RuleModule;
                    };
                };
            };
            rules: {
                'no-empty-pattern': string;
                'playwright/expect-expect': string;
                'playwright/max-nested-describe': string;
                'playwright/missing-playwright-await': string;
                'playwright/no-conditional-in-test': string;
                'playwright/no-element-handle': string;
                'playwright/no-eval': string;
                'playwright/no-focused-test': string;
                'playwright/no-force-option': string;
                'playwright/no-nested-step': string;
                'playwright/no-networkidle': string;
                'playwright/no-page-pause': string;
                'playwright/no-skipped-test': string;
                'playwright/no-useless-await': string;
                'playwright/no-useless-not': string;
                'playwright/no-wait-for-selector': string;
                'playwright/no-wait-for-timeout': string;
                'playwright/prefer-web-first-assertions': string;
                'playwright/valid-expect': string;
                'playwright/valid-title': string;
            };
        };
        'jest-playwright': {
            env: {
                jest: boolean;
                'shared-node-browser': boolean;
            };
            globals: {
                browser: boolean;
                browserName: boolean;
                context: boolean;
                deviceName: boolean;
                jestPlaywright: boolean;
                page: boolean;
            };
            plugins: string[];
            rules: {
                'jest/no-standalone-expect': (string | {
                    additionalTestBlockFunctions: string[];
                })[];
                'playwright/missing-playwright-await': string;
                'playwright/no-page-pause': string;
            };
        };
        'playwright-test': {
            env: {
                'shared-node-browser': boolean;
            };
            plugins: string[];
            rules: {
                'no-empty-pattern': string;
                'playwright/expect-expect': string;
                'playwright/max-nested-describe': string;
                'playwright/missing-playwright-await': string;
                'playwright/no-conditional-in-test': string;
                'playwright/no-element-handle': string;
                'playwright/no-eval': string;
                'playwright/no-focused-test': string;
                'playwright/no-force-option': string;
                'playwright/no-nested-step': string;
                'playwright/no-networkidle': string;
                'playwright/no-page-pause': string;
                'playwright/no-skipped-test': string;
                'playwright/no-useless-await': string;
                'playwright/no-useless-not': string;
                'playwright/no-wait-for-selector': string;
                'playwright/no-wait-for-timeout': string;
                'playwright/prefer-web-first-assertions': string;
                'playwright/valid-expect': string;
                'playwright/valid-title': string;
            };
        };
        recommended: {
            env: {
                'shared-node-browser': boolean;
            };
            plugins: string[];
            rules: {
                'no-empty-pattern': string;
                'playwright/expect-expect': string;
                'playwright/max-nested-describe': string;
                'playwright/missing-playwright-await': string;
                'playwright/no-conditional-in-test': string;
                'playwright/no-element-handle': string;
                'playwright/no-eval': string;
                'playwright/no-focused-test': string;
                'playwright/no-force-option': string;
                'playwright/no-nested-step': string;
                'playwright/no-networkidle': string;
                'playwright/no-page-pause': string;
                'playwright/no-skipped-test': string;
                'playwright/no-useless-await': string;
                'playwright/no-useless-not': string;
                'playwright/no-wait-for-selector': string;
                'playwright/no-wait-for-timeout': string;
                'playwright/prefer-web-first-assertions': string;
                'playwright/valid-expect': string;
                'playwright/valid-title': string;
            };
        };
    };
    rules: {
        'expect-expect': eslint.Rule.RuleModule;
        'max-nested-describe': eslint.Rule.RuleModule;
        'missing-playwright-await': eslint.Rule.RuleModule;
        'no-conditional-in-test': eslint.Rule.RuleModule;
        'no-element-handle': eslint.Rule.RuleModule;
        'no-eval': eslint.Rule.RuleModule;
        'no-focused-test': eslint.Rule.RuleModule;
        'no-force-option': eslint.Rule.RuleModule;
        'no-nested-step': eslint.Rule.RuleModule;
        'no-networkidle': eslint.Rule.RuleModule;
        'no-nth-methods': eslint.Rule.RuleModule;
        'no-page-pause': eslint.Rule.RuleModule;
        'no-raw-locators': eslint.Rule.RuleModule;
        'no-restricted-matchers': eslint.Rule.RuleModule;
        'no-skipped-test': eslint.Rule.RuleModule;
        'no-useless-await': eslint.Rule.RuleModule;
        'no-useless-not': eslint.Rule.RuleModule;
        'no-wait-for-selector': eslint.Rule.RuleModule;
        'no-wait-for-timeout': eslint.Rule.RuleModule;
        'prefer-lowercase-title': eslint.Rule.RuleModule;
        'prefer-strict-equal': eslint.Rule.RuleModule;
        'prefer-to-be': eslint.Rule.RuleModule;
        'prefer-to-contain': eslint.Rule.RuleModule;
        'prefer-to-have-count': eslint.Rule.RuleModule;
        'prefer-to-have-length': eslint.Rule.RuleModule;
        'prefer-web-first-assertions': eslint.Rule.RuleModule;
        'require-soft-assertions': eslint.Rule.RuleModule;
        'require-top-level-describe': eslint.Rule.RuleModule;
        'valid-expect': eslint.Rule.RuleModule;
        'valid-title': eslint.Rule.RuleModule;
    };
};

export { _default as default };
